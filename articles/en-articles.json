[
  {
    "title": "AI: Only Serves Those with Clear Goals",
    "date": "2025-03-30",
    "category": "Thoughts",
    "excerpt": "Support provided by AI assistants during website construction",
    "slug": "somethingInBuild_en",
    "lang": "en",
    "content": "\n# AI: Only Serves Those with Clear Goals\n\nRecently, as I was job hunting, I needed a project to showcase my abilities, so I temporarily created this website from last week (the 24th) until today.\nAll the code for this site is on cyouhanki.github, using only CSS+HTML+JS to generate a static website.\n\nIn the future, I may add aesthetically pleasing and practical animations and 3D effects.\n\n## Issues During Website Construction\n\nDuring this website construction, I encountered two problems:\n\n1. The original Hexo server I was using eventually became unusable. It seemed to generate folders in an infinite loop.\n2. I gave the AI assistant too many permissions, and it deleted my repository (happened twice, lol).\n\n## Lessons Learned\n\nI wrote this article to share my experiences regarding these issues.\n\nIn 2018, I discovered Hexo+GitHub and built a static blog. Even in 2025, I wanted to conveniently rebuild a site using Hexo, but I was betrayed by Hexo.\n\nSo I turned to Cursor and DeepSeek, considering rebuilding the site from zero from an AI assistant's perspective.\n\n**Technical Requirements**: You only need to understand the basic purposes of HTML, CSS, and JS.\n\nDuring my AI usage, I was heavily dependent on Cursor for the first few days, giving the AI significant permissions, including root directory searches, file deletions, and file additions. As a result, on the morning of the 28th, Cursor deleted my repository.\n\nAfter that, I adjusted my approach. When having the AI assistant write code, I told it which files to modify and didn't give it permissions beyond code modifications. However, when connecting to my own repository, I entrusted it to the AI assistant, and it deleted my repository again (second time).\n\n## Personal Reflections\n\nFrom my experience, I can say:\n\n1. AI technology can create excellent projects\n2. But when using AI technology, you yourself must have knowledge reserves and at least understand the big framework\n3. Patience is necessary\n\n---\n\nThat's all. If you have any job opportunities, please contact me! I truly cherish every opportunity. \n"
  },
  {
    "title": "C# Small Project Demo",
    "date": "2020-03-31",
    "category": "C#",
    "excerpt": "Help provided by AI assistant during website construction",
    "slug": "c-sharp-porject",
    "lang": "en",
    "content": "\n## A Simple Project I Did in 2020, Reviewing It Now for Job Hunting\n\nThe project was built using C# WPF with MySQL database. It uses a simple click-based structure without MVC framework.\nTo complete a simple project, the key is to have a clear goal and take action.\nPut yourself in the user's shoes and make adjustments based on the basics.\n\nInterface + Functionality + Database\nThat's all you need to complete a simple project.\n\nThen optimize the loading process, control threads, and make further improvements.\n\n## Effects\n\n![Admin Login](../../images/manager-login.gif)\n\n![Guest Login](../../images/cusutom.gif)\n\n## Resource Dictionary Content\n\n```xaml\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n                    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n                    xmlns:local=\"clr-namespace:WpfApp3\">\n    <!-- Same XAML code as original -->\n</ResourceDictionary>\n```\n\nThe resource dictionary contains styles that can be statically referenced to modify textboxes, buttons, and other controls. The main focus is on what I wrote. For reference only.\n\n## How to Reference the Resource Dictionary\n\nFind the `App.xaml` file and insert the following. First, my resource dictionary is named `Dictionary1.xaml`:\n\n![Resource Dictionary Reference Example](../../images/xmal.png)\n\nJust enter the content in the red box, where the source content is your resource dictionary name. After that, you can use it globally.\n\nIn the next section, I will explain how I set up permissions for different login methods (in a very simple, beginner-friendly way). "
  }
]