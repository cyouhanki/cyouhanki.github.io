[
  {
    "title": "AI:只服务于有目标的人",
    "date": "2025-03-30",
    "category": "感想",
    "excerpt": "AI助手在建站时候所提供的帮助",
    "slug": "somethingInBuild_zh",
    "lang": "zh",
    "content": "\n# AI:只服务于有目标的人\n\n最近因为在找工作，需要一个作品来表现自己，所以在上周24号开始，到今天为止，这个网站临时做出来了。\n本网站的所有代码在 cyouhanki.github 上，全部使用 CSS+HTML+JS，生成的静态网站。\n\n未来可能会加入美观实用的动画、3D 效果。\n\n## 建站过程中的问题\n\n这次建站出现了两个问题：\n\n1. 原先网站的 Hexo 服务器，最后不能使用。貌似生成了无限迭代的文件夹。\n2. AI 助手给予太多的权利，然后删库跑路（发生了两次，笑）。\n\n## 经验总结\n\n针对于这两个发生过的问题，我写下了这篇文章分享经验。\n\n2018年我接触了 Hexo+GitHub，并且曾经建了一个静态博客。在2025年我也想方便地通过 Hexo 重新建站，然后被 Hexo 背刺。\n\n于是我转向了 Cursor 和 DeepSeek，考虑从 AI 助手的角度，从零开始重新建站。\n\n**技术要求**：了解 HTML、CSS、JS 的基本用途就可以了。\n\n在 AI 使用过程中，我在前两天非常依赖于 Cursor，给予了 AI 很大的权限，包括根目录检索、文件删除、文件添加。所以在28号早上，Cursor 删库了。\n\n之后调整了方式，在 AI 助手写代码的时候，我告诉他修改哪个文件，不给予他修改代码之外的权利。然后在连接自己的库的时候，交给了 AI 助手，然后他删库了（二次）。\n\n## 个人体会\n\n我的体验是：\n\n1. AI 技术能够做出很优秀的项目\n2. 但是在使用 AI 技术的时候你本身要有知识储备，至少要有一个大框架\n3. 要有耐心\n\n---\n\n以上，如果有工作的话可以联系我！我真的很珍惜每一次的机会。 \n# Test Update\n"
  },
  {
    "title": "C#小项目效果图",
    "date": "2020-03-31",
    "category": "C#",
    "excerpt": "2020年时期的曾经做过简单的项目，因为找工作，所以拿出来复盘一下。",
    "slug": "c-sharp-porject",
    "lang": "zh",
    "content": "\n##2020年时期的曾经做过简单的项目，因为找工作，所以拿出来复盘一下。\n\n整体是通过C# WPF 做的，数据库是Mysql。结构采用的最简单的点击式，没有使用MVC框架。\n想要完成一个简单的项目，主要是你有你个明确的目标，然后行动。\n把自己想成使用者，在基础之上在进行调制即可。\n\n界面+功能+数据库\n就可以完成一个简单的项目。\n\n之后在进行载入优化，控制线程，进行优化即可。\n\n\n## 效果\n\n![管理员登陆](../../images/manager-login.gif)\n\n![游客登陆](../../images/cusutom.gif)\n\n\n\n## 资源字典的内容\n\n```xaml\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n                    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n                    xmlns:local=\"clr-namespace:WpfApp3\">\n\n    <Style x:Key=\"defaultButton\" TargetType=\"Button\">\n        <Setter Property=\"Background\" Value=\"Transparent\"/>\n        <Setter Property=\"BorderThickness\" Value=\"0\"/>\n        <Setter Property=\"FocusVisualStyle\" Value=\"{x:Null}\"/>\n        <Setter Property=\"VerticalAlignment\" Value=\"Center\"/>\n        <Setter Property=\"HorizontalAlignment\" Value=\"Center\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"Button\">\n                    <Grid>\n                        <Border x:Name=\"border\" Margin=\"8 35 0 0\"/>\n                        <ContentPresenter x:Name=\"contentPresenter\" Focusable=\"False\" \n                                              HorizontalAlignment=\"{TemplateBinding HorizontalContentAlignment}\"\n                                              Margin=\"{TemplateBinding Padding}\" RecognizesAccessKey=\"True\" \n                                              SnapsToDevicePixels=\"{TemplateBinding SnapsToDevicePixels}\"\n                                              VerticalAlignment=\"{TemplateBinding VerticalContentAlignment}\" />\n                    </Grid>\n                    <ControlTemplate.Triggers>\n                        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                            <Setter Property=\"Foreground\" Value=\"ForestGreen\"/>\n                            <Setter Property=\"BorderBrush\" Value=\"ForestGreen\" TargetName=\"border\"/>\n                            <Setter Property=\"BorderThickness\" Value=\"0 0 0 2\"  TargetName=\"border\"/>\n                        </Trigger>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n\n    <Style x:Key=\"defaultRadioStyle\" TargetType=\"RadioButton\" >\n        <Setter Property=\"Background\" Value=\"Transparent\"/>\n        <Setter Property=\"BorderThickness\" Value=\"0\"/>\n        <Setter Property=\"FocusVisualStyle\" Value=\"{x:Null}\"/>\n        <Setter Property=\"VerticalAlignment\" Value=\"Center\"/>\n        <Setter Property=\"HorizontalAlignment\" Value=\"Center\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"{x:Type RadioButton}\">\n                    <Grid x:Name=\"templateRoot\" Background=\"Transparent\" SnapsToDevicePixels=\"True\">\n                        <Border x:Name=\"border\" BorderBrush=\"Red\" BorderThickness=\"0\"  SnapsToDevicePixels=\"True\"/>\n                        <Border x:Name=\"bd2\"/>\n                        <ContentPresenter x:Name=\"contentPresenter\" ContentTemplate=\"{TemplateBinding ContentTemplate}\"\n                                              Content=\"{TemplateBinding Content}\" Grid.Column=\"1\" \n                                              ContentStringFormat=\"{TemplateBinding ContentStringFormat}\" Focusable=\"False\" \n                                              HorizontalAlignment=\"{TemplateBinding HorizontalContentAlignment}\" \n                                              Margin=\"{TemplateBinding Padding}\" RecognizesAccessKey=\"True\" SnapsToDevicePixels=\"{TemplateBinding SnapsToDevicePixels}\" \n                                              VerticalAlignment=\"{TemplateBinding VerticalContentAlignment}\"/>\n                    </Grid>\n                    <ControlTemplate.Triggers>\n                        <Trigger Property=\"HasContent\" Value=\"True\">\n                            <Setter Property=\"FocusVisualStyle\">\n                                <Setter.Value>\n                                    <Style>\n                                        <Setter Property=\"Control.Template\">\n                                            <Setter.Value>\n                                                <ControlTemplate>\n                                                    <Rectangle Margin=\"14,0,0,0\" SnapsToDevicePixels=\"True\" Stroke=\"{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}\" StrokeThickness=\"1\" StrokeDashArray=\"1 2\"/>\n                                                </ControlTemplate>\n                                            </Setter.Value>\n                                        </Setter>\n                                    </Style>\n                                </Setter.Value>\n                            </Setter>\n                            <Setter Property=\"Padding\" Value=\"4,-1,0,0\"/>\n                        </Trigger>\n                        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                            <Setter Property=\"Background\" Value=\"#F7F7F7\" TargetName=\"border\"/>\n                        </Trigger>\n                        <Trigger Property=\"IsChecked\" Value=\"true\">\n                            <Setter Property=\"FontWeight\" Value=\"Bold\" />\n                            <Setter Property=\"Foreground\"  Value=\"{Binding BackColor}\"/>\n                            <Setter Property=\"BorderThickness\" Value=\"4 0 0 0\" TargetName=\"bd2\"/>\n                            <Setter Property=\"BorderBrush\" Value=\"{Binding BackColor}\" TargetName=\"bd2\"/>\n                            <Setter Property=\"Background\" Value=\"{Binding BackColor}\" TargetName=\"border\"/>\n                            <Setter Property=\"Opacity\" Value=\"0.05\" TargetName=\"border\"/>\n                        </Trigger>\n                        <Trigger Property=\"IsChecked\" Value=\"{x:Null}\"/>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n\n    <Style TargetType=\"{x:Type ContextMenu}\">\n        <Setter Property=\"FocusVisualStyle\" Value=\"{x:Null}\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"ContextMenu\">\n                    <Border x:Name=\"Border\" CornerRadius=\"4\" Background=\"#F5F5F5\"  BorderThickness=\"2\">\n                        <Border.BorderBrush>\n                            <SolidColorBrush Color=\"ForestGreen\" />\n                        </Border.BorderBrush>\n                        <ItemsPresenter/>\n                    </Border>\n                    <ControlTemplate.Triggers>\n                        <MultiTrigger>\n                            <MultiTrigger.Conditions>\n                                <Condition Property=\"IsMouseOver\" Value=\"True\"/>\n                            </MultiTrigger.Conditions>\n                            <MultiTrigger.EnterActions>\n                                <BeginStoryboard>\n                                    <Storyboard>\n                                        <DoubleAnimationUsingKeyFrames BeginTime=\"00:00:00\"  Storyboard.TargetProperty=\"(FrameworkElement.Width)\">\n                                            <SplineDoubleKeyFrame KeyTime=\"00:00:00.0020000\" Value=\"0\"/>\n                                            <SplineDoubleKeyFrame KeyTime=\"00:00:00.3450000\" Value=\"100\"/>\n                                        </DoubleAnimationUsingKeyFrames>\n                                        <DoubleAnimationUsingKeyFrames BeginTime=\"00:00:00\"  Storyboard.TargetProperty=\"(FrameworkElement.Height)\">\n                                            <SplineDoubleKeyFrame KeyTime=\"00:00:00.0020000\" Value=\"0\"/>\n                                            <SplineDoubleKeyFrame KeyTime=\"00:00:00.3450000\" Value=\"70\"/>\n                                        </DoubleAnimationUsingKeyFrames>\n                                    </Storyboard>\n                                </BeginStoryboard>\n                            </MultiTrigger.EnterActions>\n                        </MultiTrigger>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n\n    <Style TargetType=\"{x:Type MenuItem}\">\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"{x:Type MenuItem}\">\n                    <Border Margin=\"1\" MinWidth=\"80\" CornerRadius=\"5\">\n                        <Border.Background>\n                            <SolidColorBrush x:Name=\"MyAnimatedBrushBackground\" Color=\"Transparent\" />\n                        </Border.Background>\n                        <StackPanel Orientation=\"Horizontal\">\n                            <TextBlock Text=\" \"/>\n                            <ContentPresenter ContentSource=\"Icon\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\" />\n                            <TextBlock Text=\"   \"/>\n                            <ContentPresenter ContentSource=\"Header\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n                        </StackPanel>\n                    </Border>\n                    <ControlTemplate.Triggers>\n                        <MultiTrigger>\n                            <MultiTrigger.Conditions>\n                                <Condition Property=\"IsMouseOver\" Value=\"True\"/>\n                            </MultiTrigger.Conditions>\n                            <MultiTrigger.EnterActions>\n                                <BeginStoryboard>\n                                    <Storyboard>\n                                        <ColorAnimationUsingKeyFrames BeginTime=\"00:00:00\" Storyboard.TargetName=\"MyAnimatedBrushBackground\" Storyboard.TargetProperty=\"Color\">\n                                            <LinearColorKeyFrame Value=\"Transparent\" KeyTime=\"00:00:00.0020000\" />\n                                            <LinearColorKeyFrame Value=\"#7E9C9C9C\" KeyTime=\"00:00:00.0320000\" />\n                                        </ColorAnimationUsingKeyFrames>\n                                    </Storyboard>\n                                </BeginStoryboard>\n                            </MultiTrigger.EnterActions>\n                            <MultiTrigger.ExitActions>\n                                <BeginStoryboard>\n                                    <Storyboard>\n                                        <ColorAnimationUsingKeyFrames BeginTime=\"00:00:00\" Storyboard.TargetName=\"MyAnimatedBrushBackground\" Storyboard.TargetProperty=\"Color\">\n                                            <LinearColorKeyFrame Value=\"#7E9C9C9C\" KeyTime=\"00:00:00.0020000\" />\n                                            <LinearColorKeyFrame Value=\"Transparent\" KeyTime=\"00:00:00.0320000\" />\n                                        </ColorAnimationUsingKeyFrames>\n                                    </Storyboard>\n                                </BeginStoryboard>\n                            </MultiTrigger.ExitActions>\n                        </MultiTrigger>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n\n    <Style x:Key=\"loginButton\" TargetType=\"Button\">\n        <Setter Property=\"Background\" Value=\"Transparent\"/>\n        <Setter Property=\"BorderThickness\" Value=\"1\"/>\n        <Setter Property=\"FocusVisualStyle\" Value=\"{x:Null}\"/>\n        <Setter Property=\"VerticalAlignment\" Value=\"Center\"/>\n        <Setter Property=\"HorizontalAlignment\" Value=\"Center\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"Button\">\n                    <Grid>\n                        <Border x:Name=\"border\" Margin=\"8 35 0 0\"/>\n                        <ContentPresenter x:Name=\"contentPresenter\" Focusable=\"False\" \n                                              HorizontalAlignment=\"{TemplateBinding HorizontalContentAlignment}\"\n                                              Margin=\"{TemplateBinding Padding}\" RecognizesAccessKey=\"True\" \n                                              SnapsToDevicePixels=\"{TemplateBinding SnapsToDevicePixels}\"\n                                              VerticalAlignment=\"{TemplateBinding VerticalContentAlignment}\" />\n                    </Grid>\n                    <ControlTemplate.Triggers>\n                        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                            <Setter Property=\"Foreground\" Value=\"ForestGreen\"/>\n                            <Setter Property=\"BorderBrush\" Value=\"ForestGreen\" TargetName=\"border\"/>\n                            <Setter Property=\"BorderThickness\" Value=\"0 0 0 2\"  TargetName=\"border\"/>\n                        </Trigger>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n\n    <Style x:Key=\"DataGridStyle\" TargetType=\"DataGrid\">\n        <Setter Property=\"ColumnHeaderStyle\" Value=\"{DynamicResource ColumnHeaderStyle}\"/>\n        <Setter Property=\"CellStyle\" Value=\"{DynamicResource CellStyle}\"/>\n        <Setter Property=\"RowStyle\" Value=\"{DynamicResource RowStyle}\"/>\n        <Setter Property=\"Background\" Value=\"Transparent\"/>\n        <Setter Property=\"EnableRowVirtualization\" Value=\"False\"/>\n        <Setter Property=\"GridLinesVisibility\" Value=\"None\"/>\n        <Setter Property=\"CanUserAddRows\" Value=\"False\"/>\n        <Setter Property=\"AutoGenerateColumns\" Value=\"False\"/>\n        <Setter Property=\"IsEnabled\" Value=\"True\"/>\n    </Style>\n\n    <Style x:Key=\"ColumnHeaderStyle\" TargetType=\"DataGridColumnHeader\">\n        <Setter Property=\"Height\" Value=\"30\"/>\n        <Setter Property=\"Background\" Value=\"#F2F2F2\"/>\n        <Setter Property=\"BorderThickness\" Value=\"1\"/>\n        <Setter Property=\"BorderBrush\" Value=\"#F2F2F2\"/>\n        <Setter Property=\"FontSize\" Value=\"30\"/>\n        <Setter Property=\"VerticalContentAlignment\" Value=\"Center\"/>\n        <Setter Property=\"HorizontalContentAlignment\" Value=\"Center\"/>\n    </Style>\n\n    <Style x:Key=\"RowStyle\" TargetType=\"DataGridRow\">\n        <Setter Property=\"Cursor\" Value=\"Hand\"/>\n        <Style.Triggers>\n            <Trigger Property=\"IsMouseOver\" Value=\"true\">\n                <Setter Property=\"Background\" Value=\"#F2F2F2\"/>\n            </Trigger>\n            <Trigger Property=\"IsSelected\" Value=\"True\">\n                <Setter Property=\"Background\" Value=\"#CBCBCB\"/>\n            </Trigger>\n        </Style.Triggers>\n    </Style>\n\n    <Style x:Key=\"CellStyle\" TargetType=\"DataGridCell\">\n        <Setter Property=\"Height\" Value=\"30\"/>\n        <Setter Property=\"FontSize\" Value=\"13\"/>\n        <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate TargetType=\"DataGridCell\">\n                    <Border x:Name=\"Bg\" Background=\"Transparent\" BorderThickness=\"1\" UseLayoutRounding=\"True\" BorderBrush=\"Bisque\">\n                        <ContentPresenter HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n                    </Border>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n        <Style.Triggers>\n            <Trigger Property=\"IsSelected\" Value=\"True\">\n                <Setter Property=\"Background\" Value=\"#CBCBCB\"/>\n                <Setter Property=\"Foreground\" Value=\"#000000\"/>\n            </Trigger>\n        </Style.Triggers>\n    </Style>\n\n    <Style x:Key=\"Header\" TargetType=\"DataGridColumnHeader\">\n        <Setter Property=\"Foreground\" Value=\"Green\"/>\n        <Setter Property=\"FontSize\" Value=\"15\"/>\n        <Setter Property=\"HorizontalAlignment\" Value=\"Center\"/>\n    </Style>\n</ResourceDictionary>\n```\n\n资源字典中放的是样式，通过静态引用，改变文本框，按钮的样式等等。主要是看我写了什么。仅供参考。\n\n## 资源字典怎么引用\n\n找到 `App.xaml` 文件，然后这么插入。首先我的资源字典名字叫做 `Dictionary1.xaml`：\n\n![资源字典引用示例](../../images/xmal.png)\n\n把红色框框内容敲入即可，source 内容填的是你的资源字典的名称。填好之后，就可以全局引用。\n\n下一节我将讲一下我如何通过不同的登陆方式设置权限（很简单的方式，菜鸟级别）。"
  }
]